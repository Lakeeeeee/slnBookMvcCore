@inject UserInforService user
@model IEnumerable<prjBookMvcCore.Models.Book>
@{
    ViewData["Title"] = "收藏清單";
    Layout = "~/Views/Shared/_Layout_Member.cshtml";
    BookShopContext db = new BookShopContext();
}
<style>
    .cust2:hover {
        color: brown
    }

</style>
<p><h4>收藏清單</h4></p>
<div class="container" style="margin-top:15px">
    <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="btn btn-outline-light active" id="pills-1-tab" data-bs-toggle="pill" data-bs-target="#pills-1" type="button" role="tab" aria-controls="pills-1" aria-selected="true">暫存清單</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="btn btn-outline-light " id="pills-2-tab" data-bs-toggle="pill" data-bs-target="#pills-2" type="button" role="tab" aria-controls="pills-2" aria-selected="false">收藏的作者</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="btn btn-outline-light " id="pills-3-tab" data-bs-toggle="pill" data-bs-target="#pills-3" type="button" role="tab" aria-controls="pills-3" aria-selected="false">收藏的出版社</button>
        </li>
    </ul>
    <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-1" role="tabpanel" aria-labelledby="pills-1-tab">
            <table class="table table-hover">
                <tr>
                    <th style="width:50px">序號</th>
                    <th style="width:350px">書名</th>
                    <th>優惠價</th>
                    <th>庫存量</th>
                    <th>來去購買</th>
                    <th>取消追蹤</th>
                </tr>
                @{
                    int count = 0;
                    foreach (var item in Model)
                    {
                        count++;
                        decimal 折扣 = item.BookDiscountDetails.Where(x => x.BookDiscountStartDate < DateTime.Now & x.BookDiscountEndDate > DateTime.Now).Select(x => x.BookDiscount.BookDiscountAmount).FirstOrDefault();
                        int 活動價 = (int)Math.Ceiling(item.UnitPrice * 折扣);
                        int adcId = db.ActionDetials.Where(x => x.MemberId == user.UserId && x.BookId == item.BookId && x.ActionId == 4).Select(x => x.ActionToBookId).FirstOrDefault();
                        <tr>
                            <td>
                                @count
                            </td>
                            <td id="text-@item.BookId">
                                @Html.ActionLink(@item.BookTitle.Split("$")[0], "BookInformation", "Book", new{id=item.BookId}, new{@class="cust2"})
                            </td>
                            <td>
                                @Html.DisplayFor(item=>活動價) 元
                            </td>
                            <td>
                                @item.UnitInStock 本
                            </td>
                            <td>
                                <button class="btn btn-outline-secondary btn-sm" onclick="ActionTo(@item.BookId,@user.UserId)">加入購物車</button>
                            </td>
                            <td>
                                <button class="btn btn-outline-secondary btn-sm" name="id" onclick="cancleAction(@adcId)">取消追蹤</button>
                            </td>
                        </tr>
                    }
                }
            </table> @*//暫存清單*@
        </div>
        <div class="tab-pane fade" id="pills-2" role="tabpanel" aria-labelledby="pills-2-tab">
            <table id="table1" class="table table-hover">
            </table> @*//作者*@
        </div>
        <div class="tab-pane fade" id="pills-3" role="tabpanel" aria-labelledby="pills-3-tab">
            <table id="table2" class="table table-hover">
            </table> @*//出版社*@
        </div>
    </div>
</div>

<script>
    async function ActionTo(bookid, memid) {
        const response = await fetch('@Url.Action("ActionTo", "Member")?bookID=' + bookid + '&memberID=' + memid + '&actionID=' + 7);
        const confirm = await response.json();
        console.log(confirm);
        if (confirm.Value.success === true) {
            swal(confirm.Value.message, "感謝您的支持!", "success").then(() => {
                window.location.reload();
            });
        } else {
            swal(confirm.Value.message, "加入購物車失敗", "warning");
        };
    };
</script>
<script>
    const btn2 = document.querySelector('#pills-2-tab');
    btn2.addEventListener('click', async () => {
        const response = await fetch('@Url.Action("myAuthor")');
        const dataobj = await response.json();
        const authors = JSON.parse(dataobj).map(({ authorId, authorName }) => ({ id: authorId, name: authorName }));
        let count = 0;
        const table = document.querySelector('#table1');
        table.innerHTML = '';
        const thead = table.createTHead();
        const row = thead.insertRow();
        row.insertAdjacentHTML('beforeend', '<th style="width:50px">序號</th>');
        row.insertAdjacentHTML('beforeend', '<th style="width:350px">作者</th>');
        row.insertAdjacentHTML('beforeend', '<th>最近的書目</th>');
        row.insertAdjacentHTML('beforeend', '<th>取消追蹤</th>');
        //row.insertAdjacentHTML('beforeend', '<th>更新時間</th>');
        const tbody = table.createTBody();
        authors.forEach(data => {
            count = count + 1;
            const row = tbody.insertRow();
            row.insertCell().innerText = count;
            row.insertCell().innerText = data.name;
            const btnHtml = `<button type="submit" name="id" value="${data.id}" class="btn btn-outline-secondary" onclick="redirectToAuthor(${data.id})">最近的書目</button>`;
            row.insertCell().innerHTML = btnHtml;
            const btnHtml2 = `<button type="submit" name="id" value="${data.id}" class="btn btn-outline-secondary" onclick="cancleA(${data.id})">取消追蹤</button>`;
            row.insertCell().innerHTML = btnHtml2;
            //row.insertCell().innerText = data.time;
        });
        table.appendChild(thead, tbody);
    })
    function redirectToAuthor(id) {
        const url = '@Url.Action("authorInformation", "Book")' + "?id=" + id;
        window.location.href = url
    };
    function cancleA(id) {
        swal({
            title: "確定要取消追蹤嗎?",
            icon: "warning",
            buttons: true,
            dangerMode: false
        }).then((value) => {
            if (value === true) {
                const url = '@Url.Action("cancleAuthor", "Member")' + "?id=" + id;
                window.location.href = url
            }
        });
    }
</script>
<script>
    const btn3 = document.querySelector('#pills-3-tab');
    btn3.addEventListener('click', async () => {
        const response = await fetch('@Url.Action("myPublisher")');
        const dataobj = await response.json();
        const authors = JSON.parse(dataobj).map(({ publisherId, publisherName }) => ({ id: publisherId, name: publisherName }));
        let count = 0;
        const table = document.querySelector('#table2');
        table.innerHTML = '';
        const thead = table.createTHead();
        const row = thead.insertRow();
        row.insertAdjacentHTML('beforeend', '<th style="width:50px">序號</th>');
        row.insertAdjacentHTML('beforeend', '<th style="width:350px">出版社</th>');
        row.insertAdjacentHTML('beforeend', '<th>最近的書目</th>');
        row.insertAdjacentHTML('beforeend', '<th>取消追蹤</th>');
        //row.insertAdjacentHTML('beforeend', '<th>更新時間</th>');
        const tbody = table.createTBody();
        console.log(authors);
        authors.forEach(data => {
            count = count + 1;
            const row = tbody.insertRow();
            row.insertCell().innerText = count;
            row.insertCell().innerText = data.name;
            const btnHtml = `<button type="submit" name="id" value="${data.id}" class="btn btn-outline-secondary" onclick="redirectToPublisher(${data.id})">最近的書目</button>`;
            row.insertCell().innerHTML = btnHtml;
            const btnHtml2 = `<button type="submit" name="id" value="${data.id}" class="btn btn-outline-secondary" onclick="cancleP(${data.id})">取消追蹤</button>`;
            row.insertCell().innerHTML = btnHtml2;
            //row.insertCell().innerText = data.time;

        });
        table.appendChild(thead, tbody);
    })
    function redirectToPublisher(id) {
        const url = '@Url.Action("publisherInformation", "Book")' + "?id=" + id;
        window.location.href = url
    };
    function cancleP(id) {
        swal({
            title: "確定要取消追蹤嗎?",
            icon: "warning",
            buttons: true,
            dangerMode: false
        }).then((value) => {
            if (value === true) {
                const url = '@Url.Action("canclePublisher", "Member")' + "?id=" + id;
                window.location.href = url
            }
        })
    }
</script>

<script>
    async function cancleAction(id) {
        console.log(id);
        swal({
            title: "確定要取消追蹤嗎?",
            icon: "warning",
            buttons: true,
            dangerMode: false
        }).then(async (value) => {
            if (value === true) {
                const response = await fetch('@Url.Content("~/Member/FollowCancle")?id=' + id);
                const confirmText = await response.text();
                if (confirmText === "True") {
                    swal("完成", "已取消追蹤", "success").then(() => {
                        location.reload();
                    });
                } else {
                    swal("失敗", "請回報問題給客服人員，謝謝", "error");
                }
            }
        });
    }
</script>
