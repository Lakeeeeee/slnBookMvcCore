@model IEnumerable<prjBookMvcCore.Models.Book>
@{
    ViewData["Title"] = "myCollect";
    Layout = "~/Views/Shared/_Layout_Member.cshtml";
}

<div class="container" style="margin-top:15px">
    <p><h6>收藏清單</h6></p>
    <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="btn btn-outline-light active" id="pills-1-tab" data-bs-toggle="pill" data-bs-target="#pills-1" type="button" role="tab" aria-controls="pills-1" aria-selected="true">暫存清單</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="btn btn-outline-light " id="pills-2-tab" data-bs-toggle="pill" data-bs-target="#pills-2" type="button" role="tab" aria-controls="pills-2" aria-selected="false">收藏的作者</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="btn btn-outline-light " id="pills-3-tab" data-bs-toggle="pill" data-bs-target="#pills-3" type="button" role="tab" aria-controls="pills-3" aria-selected="false">收藏的出版社</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="btn btn-outline-light " id="pills-4-tab" data-bs-toggle="pill" data-bs-target="#pills-4" type="button" role="tab" aria-controls="pills-4" aria-selected="false">可購買時通知我</button>
        </li>
    </ul>
    <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-1" role="tabpanel" aria-labelledby="pills-1-tab">
            <table class="table table-hover">
                <tr>
                    <th>序號</th>
                    <th>書名</th>
                    <th>優惠</th>
                    <th>優惠價</th>
                    <th>出版社</th>
                </tr>
                @{
                    int count = 0;
                    foreach (var item in Model)
                    {
                        count++;
                        string 活動 = item.BookDiscountDetails.Select(x => x.BookDiscount.BookDiscountName).FirstOrDefault();
                        decimal 折扣 = item.BookDiscountDetails.Select(x => x.BookDiscount.BookDiscountAmount).FirstOrDefault();
                        decimal 活動價 = item.UnitPrice * 折扣;
                        string 供貨狀況 = item.UnitInStock > 0 ? "可供貨" : "缺貨";
                        int adcId = item.ActionDetials.Select(x => x.ActionToBookId).FirstOrDefault();
                                                        <tr>
                                                            <td>
                                                                @count
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.BookTitle)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => 活動)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => 活動價)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.Publisher!.PublisherName)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => 供貨狀況)
                                                            </td>
                                                            <td>
                                                                @Html.ActionLink("來去購買", "BookInformation", "Book", new{id=item.BookId}, new{@class="btn btn-outline-secondary"})
                                                            </td>
                                                            <td>
                                                                <button class="btn btn-outline-secondary" name="id" value="adcId" id="followCancle" onclick="confirm('確定要取消嗎?')">取消暫存</button>
                                                                @Html.ActionLink("取消暫存", "FollowCancle", new { }, new { onclick = "return confirm('確定要取消嗎?')" })
                                                            </td>

                                                        </tr>
                    }
                }
            </table> @*//暫存清單*@
        </div>
        <div class="tab-pane fade" id="pills-2" role="tabpanel" aria-labelledby="pills-2-tab">
            <table id="table1" class="table table-hover">
            </table> @*//作者*@
        </div>
        <div class="tab-pane fade" id="pills-3" role="tabpanel" aria-labelledby="pills-3-tab">
            <table id="table2" class="table table-hover">
            </table> @*//出版社*@
        </div>
        <div class="tab-pane fade" id="pills-4" role="tabpanel" aria-labelledby="pills-4-tab">
            <table id="table3" class="table table-hover">
            </table> @*//可購買時通知我*@
        </div>

    </div>
</div>

<script>
    const btn2 = document.querySelector('#pills-2-tab');
    btn2.addEventListener('click', async () => {
        const response = await fetch('@Url.Action("myAuthor")');
        const dataobj = await response.json();
        const authors = JSON.parse(dataobj).map(({ authorId, authorName }) => ({ id: authorId, name: authorName }));
        let count = 0;
        const table = document.querySelector('#table1');
        table.innerHTML = '';
        const thead = table.createTHead();
        const row = thead.insertRow();
        row.insertCell().innerText = '序號';
        row.insertCell().innerText = '作者';
        row.insertCell().innerText = '最近的書目';
        const tbody = table.createTBody();
        authors.forEach(data => {
            count = count + 1;
            const row = tbody.insertRow();
            row.insertCell().innerText = count;
            row.insertCell().innerText = data.name;
            const btnHtml = `<button type="submit" name="id" value="${data.id}" class="btn btn-outline-secondary" onclick="redirectToAuthor(${data.id})">最近的書目</button>`;
            row.insertCell().innerHTML = btnHtml;
        });
        table.appendChild(thead, tbody);
    })
    function redirectToAuthor(id) {
        const url = '@Url.Action("authorInformation", "Book")' + "?id=" + id;
        window.location.href = url
    };

</script>
<script>
    const btn3 = document.querySelector('#pills-3-tab');
    btn3.addEventListener('click', async () => {
        const response = await fetch('@Url.Action("myPublisher")');
        const dataobj = await response.json();
        const authors = JSON.parse(dataobj).map(({ publisherId, publisherName }) => ({ id: publisherId, name: publisherName }));
        let count = 0;
        const table = document.querySelector('#table2');
        table.innerHTML = '';
        const thead = table.createTHead();
        const row = thead.insertRow();
        row.insertCell().innerText = '序號';
        row.insertCell().innerText = '出版社';
        row.insertCell().innerText = '最近的書目';
        const tbody = table.createTBody();
        authors.forEach(data => {
            count = count + 1;
            const row = tbody.insertRow();
            row.insertCell().innerText = count;
            row.insertCell().innerText = data.name;
            const btnHtml = `<button type="submit" name="id" value="${data.id}" class="btn btn-outline-secondary" onclick="redirectToPublisher(${data.id})">最近的書目</button>`;
            row.insertCell().innerHTML = btnHtml;
        });
        table.appendChild(thead, tbody);
    })
    function redirectToPublisher(id) {
        const url = '@Url.Action("publisherInformation", "Book")' + "?id=" + id;
        window.location.href = url
    };</script>
<script>
    const btn4 = document.querySelector('#pills-4-tab');
    btn4.addEventListener('click', async () => {
        const response = await fetch('@Url.Action("myNotice")');
        const dataobj = await response.json();
        const authors = JSON.parse(dataobj).map(({ bookId, bookStock, bookName }) => ({ id: bookId, stock: bookStock, name: bookName }));
        let count = 0;
        const table = document.querySelector('#table3');
        table.innerHTML = '';
        const thead = table.createTHead();
        const row = thead.insertRow();
        row.insertCell().innerText = '序號';
        row.insertCell().innerText = '書名';
        row.insertCell().innerText = '庫存情況';
        const tbody = table.createTBody();
        authors.forEach(data => {
            count = count + 1;
            const row = tbody.insertRow();
            row.insertCell().innerText = count;
            row.insertCell().innerText = data.name;
            row.insertCell().innerText = data.stock;
            const btnHtml = `<button type="submit" name="id" value="${data.id}" class="btn btn-outline-secondary" onclick="redirectToAction(${data.id})">來去購買</button>`;
            row.insertCell().innerHTML = btnHtml;
        });
        table.appendChild(thead, tbody);
    });
    function redirectToAction(id) {
        const url = '@Url.Action("BookInformation", "Book")' + "?id=" + id;
        window.location.href = url
    };

</script>
<script>
    const cancleBtn = document.getElementById('followCancle');
    cancleBtn.addEventListener('click', async (event)=>{
        const response = await fetch('@Url.Content("~/Member/FollowCancle")?id=' + event.value);
        console.log(event.value);
        const confirmText = response.text();
        if (confirmText === "True"){
            alert('');

        }


    });




</script>