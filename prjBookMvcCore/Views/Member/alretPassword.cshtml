@model Member
@Html.AntiForgeryToken()
@{
    ViewData["Title"] = "修改密碼";
    Layout = "~/Views/Shared/_Layout_Member.cshtml";
}
<style>
    .card:hover {
        box-shadow: 0 0 2px #ddd;
        transform: scale(1.01);
    }

    .card {
        transition: all 0.5s ease-in-out; /* 增加過渡時間至 0.5 秒 */
    }

    .zoom-in {
        transform: scale(1.01);
        transition: transform 0.5s ease-in-out;
    }

    .zoom-out {
        transform: scale(1.01);
        transition: transform 0.5s ease-in-out;
    }

</style>
<p><h4>修改密碼</h4></p>
<div class="container" >
    <form asp-action="alretPasswordMethod" id="form">
        <div>
            <input type="hidden" id="memId" name="memId" value="@Model.MemberId" />
            <p>舊的密碼： <input name="oldPwd" id="oldPwd" type="password"></p>
            <p>新的密碼： <input name="newPwd" id="newPwd" type="password"></p>
            <p>確認密碼： <input nema="checkPwd" id="checkPwd" type="password"></p>
            <p><label id="passwordError" style="font-size:xx-small">請設定8-10位英數字密碼，須包含至少一個大寫字母</label></p>
            <p><button id="demo" class="btn btn-outline-secondary" type="button">Demo</button>
                <button id="toggleVisibilityBtn" class="btn btn-outline-secondary" type="button" style="margin-left:15px">顯示密碼</button></p>
        </div>
        <div>
            <p>
                <div class="card">
                    <input class="card-body" value="確認送出" type="submit" style="display:block;width:100%;border:none; background-color:transparent">
                </div>
            </p>
        </div>
    </form>
</div>

<script>
    const oldPwd = document.querySelector('#oldPwd');
    const newPwd = document.querySelector('#newPwd');
    const memId = document.querySelector('#memId');
    const checkPwd = document.querySelector('#checkPwd');
    const form = document.querySelector('#form');
    form.addEventListener('submit', async (event) => {
        event.preventDefault();
        if (checkPwd.value !== newPwd.value) {
            swal("修改失敗", "兩次輸入密碼不同!", "error");
            return;
        };
        const isPwdValid = pwdCheck(newPwd.value);
        if (!isPwdValid) {
            return;
        };
        const response = await fetch('@Url.Action("alretPasswordMethod", "Member")', {
            method: 'POST',
            body: new FormData(form)
        });
        const datas = await response.json();
        if (datas.success === true) {
            swal(datas.message, "請重新登入", "success").then(() => {
                window.location.href = '@Url.ActionLink("LogOut", "Member")';
            });
        }
        else {
            swal(datas.message, "請確認輸入資訊", "warning")
            .then(() => { 
                window.location.href = window.location.href;
                });
        }
    });

    // 驗證密碼格式
    function pwdCheck(inputpwd) {
        var passwordPattern = /^(?=.*[A-Z])[A-Za-z0-9]{8,}$/;
        var passwordError = document.getElementById("passwordError");
        if (!passwordPattern.test(inputpwd)) {
            passwordError.innerText = "密碼必須為8到10位的英文字母和數字組合，並至少包含一個大寫字母";
            passwordError.classList.add("error");
            passwordError.classList.add("zoom-in");
            setTimeout(function () {
                passwordError.classList.add("zoom-out");
                passwordError.classList.remove("zoom-in");
                passwordError.classList.remove("zoom-out");
            }, 300);

            passwordError.focus();
            return false;
        }
        passwordError.innerText = "";
        return true;
    };

</script>
<script>
    const toggleVisibilityBtn = document.getElementById('toggleVisibilityBtn');
    const oldPwdInput = document.getElementById('oldPwd');
    const newPwdInput = document.getElementById('newPwd');
    const checkPwdInput = document.getElementById('checkPwd');
    const demoBtn = document.getElementById('demo');

    toggleVisibilityBtn.addEventListener('click', () => {
        toggleVisibility(oldPwdInput);
        toggleVisibility(newPwdInput);
        toggleVisibility(checkPwdInput);
    });

    function toggleVisibility(inputElement) {
        if (inputElement.type === 'password') {
            inputElement.type = 'text';
        } else {
            inputElement.type = 'password';
        }
    };
    demoBtn.addEventListener('click', () => {
        oldPwdInput.value = 'As123456';
        newPwdInput.value = 'Bs123456';
        checkPwdInput.value = 'Bs123456';
    });
</script>